<?php
/**
 * @file
 * Contains base function for social module.
 */

/**
 * Implements hook_menu().
 */
function social_menu() {
	$items['admin/config/administration/social'] = array(
		'title' => 'Page for insert social icons',
		'description' => 'Creating social profile icons',
		'page callback' => 'social_list',
		'page arguments' => array('social_insert_form'),
		'access arguments' => array('administer site configuration'),
		'type' => MENU_NORMAL_ITEM,
	);
	$items['admin/config/administration/social/list'] = array(
		'title' => 'Social Icons List',
		'description' => 'List social icons',
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => 0,
	);
	$items['admin/config/administration/social/add'] = array(
		'title' => 'Add Social Icons',
		'description' => 'Setting social icons',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('social_insert_form'),
		'access arguments' => array('administer site configuration'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 1,
	);
	$items['admin/config/administration/social/%social/edit'] = array(
		'title' => 'Edit Social Icons',
		'description' => 'Setting social icons',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('social_insert_form', 4),
		'access arguments' => array('administer site configuration'),
		'type' => MENU_CALLBACK,
	);
	$items['admin/config/administration/social/%social/delete'] = array(
		'title' => 'Delete Social Icons',
		'description' => 'Setting social icons',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('social_delete_form', 4),
		'access arguments' => array('administer site configuration'),
		'type' => MENU_CALLBACK,
	);
	return $items;
}

/**
 * Implements hook_entity_info()
 */
function social_entity_info() {
	return array(
		'social' => array(                               
			'label' => 'Social icons',
			'entity class' => 'Entity',
			'controller class' => 'EntityAPIController',
			'base table' => 'social_table',
			'entity keys' => array(
				'id' => 'id',
				'label' => 'title'
			),
			'admin ui' => array(
				'path' => 'admin/config/administration/social'
			),
			'access callback' => 'social_access',
			'module' => 'social',
		),
	);
}

/**
 * Checking permissions
 */
function social_access($op, $entity, $account = NULL, $entity_type = 'social') {
	return user_access('administer site configuration');
}

/**
 * Returns icon by ID
 */
function social_load($id) {
	$result = entity_load('social', array($id));
	return $result ? reset($result) : FALSE;
}

/**
 * Function return array for theme_image()
 * @param $fid files
 *
 */
function _image_array($fid) {
	return array(
		'path' => file_load($fid)->uri,
		'width' => '50px',
		'height' => '50px',
		'attributes' => array('class' => 'some-img', 'id' => 'my-img'),
	);
}

/**
 * Reslisation function social_list()
 * Callback icon list
 */
function social_list() {
	$social = db_select('social_table', 'si')
		->fields('si', array('id'))
		->orderBy('si.id')
		->execute();
	$header = array('Title', 'Link', 'Icon', 'Hover Icon', 'Actions');
	$rows = array();

	foreach ($social as $id) {
		$entity = social_load($id->id);
		$actions = array(
			l('edit', 'admin/config/administration/social/' . $id->id . '/edit'),
			l('delete', 'admin/config/administration/social/' . $id->id . '/delete', array('query' => array('token' => drupal_get_token('social-' . $id->id)))),
		);
		$rows[] = array(
			$entity->title,
			$entity->link,
			theme_image(_image_array($entity->icon)),
			theme_image(_image_array($entity->hover_icon)),
			implode(' | ', $actions)
		);
	}
	$output = theme('table', array('header' => $header, 'rows' => $rows));
	return $output;
}

/**
 * Implements hook_form()
 */
function social_insert_form($form, &$form_state, $social, $op = 'edit') {
	$form = array(
		'#title' => 'Add icon',
		'#type' => 'fieldset',
	);
	dpm($social->id);
	$form['id'] = array(
		'#type' => 'value',
		'#value' => isset($social->id) ?  $social->id : FALSE,
	);
	$form['title'] = array(
		'#title' => 'Title',
		'#type' => 'textfield',
		'#maxlength' => 64,
		'#size' => 60,
		'#required' => TRUE,
		'#attributes' => array('class' => array('title')),
		'#default_value' => isset($social->title) ? $social->title : '',
	);
	$form['link'] = array(
		'#title' => 'Link',
		'#type' => 'textfield',
		'#maxlength' => 124,
		'#required' => TRUE,
		'#atributes' => array('class' => array('link')),
		'#description' => 'Input link in format "http://" or "https://".',
		'#default_value' => isset($social->link) ? $social->link : '',
	);
	$form['icon'] = array(
		'#title' => 'Upload icon',
		'#type' => 'managed_file',
		'#description' => 'Select file: jpg, jpeg, png, gif',
		'#upload_location' => 'public://',
		'#upload_validators' => array(
			'file_validate_is_image' => array(),
			'file_validate_extensions' => array('png gif jpg jpeg'),
			'file_validate_size' => array(1 * 1024 * 1024),
		),
		'#default_value' => isset($social->icon) ? $social->icon : '',
  );
	$form['hover_icon'] = array(
		'#title' => 'Upload hover icon',
		'#type' => 'managed_file',
		'#description' => 'Select file: jpg, jpeg, png, gif',
		'#upload_location' => 'public://',
		'#upload_validators' => array(
			'file_validate_is_image' => array(),
			'file_validate_extensions' => array('png gif jpg jpeg'),
			'file_validate_size' => array(1 * 1024 * 1024),
		),
		'#default_value' => isset($social->hover_icon) ? $social->hover_icon : '',
	);
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => 'Submit'
	);
	return $form;
}

/**
 * Implements hook_forms_validate().
 */
function social_insert_form_validate($form, $form_state) {

  if (!preg_match('/^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/', $form_state['values']['link'])) {
    form_set_error('link', t('"Link" do not begin "http://" or "https://".'));
  }

  $validators = array(
     'file_validate_is_image' => array(), 
  );
  $icon = file_save_upload('icon', $validators);

  $hover_icon = file_save_upload('hover_icon', $validators);
   $form_state['values']['hover_icon'] = $hover_icon;
}

/**
 * Implements hook_form_submit()
 */
function social_insert_form_submit($form, &$form_state) {
	$icon = file_load($form_state['values']['icon']);
	$icon = file_save($icon);
	dpm($form_state['values']);
	if ($form_state['values']['id']) {
		$social = social_load($form_state['values']['id']);
		$social->title = $form_state['values']['title'];
		$social->link = $form_state['values']['link'];
		$social->icon = $form_state['values']['icon'];
		$social->hover_icon = $form_state['values']['hover_icon'];
		$social = entity_save('social', $social);
	} else {
		$values = array(
			'title' => $form_state['values']['title'],
			'link' => $form_state['values']['link'],
			'icon' => $form_state['values']['icon'],
			'hover_icon' => $form_state['values']['hover_icon'],
		);
		$social = entity_create('social', $values);
		$social = entity_save('social', $social);
	}
	if ($social) {
		drupal_set_message(t('Form submit'));
	}
	$form_state['redirect'] = 'admin/config/administration/social/list';
}

/**
 * Realised delete entity
 */
function social_delete_form($form, &$form_state, $social) {
	$form['delete']= array(
		'#title' => 'Delete Icons',
		'#type' => 'fieldset',
	);
	$form['id'] = array(
		'#type' => 'value',
		'#value' => $social->id
	);
	$form['delete']['back'] = array(
		'#type' => 'markup',
		'#markup' => l('Return back', 'admin/config/administration/social/list')
	);
	$form['delete']['submit'] = array(
		'#type' => 'submit',
		'#value' => 'Delete',
		'#submit' => array('social_delete_form_submit'),
   // '#validate' => TRUE,

	);
	return $form;
}

/**
 * Function delete entity social_icons
 */
function social_delete_form_submit($form, &$form_state) {
	$delete = entity_delete('social', $form_state['values']['id']);
	if ($delete) {
		drupal_set_message(t('Icons delete'));
	}
	$form_state['redirect'] = 'admin/config/administration/social/list';
}
